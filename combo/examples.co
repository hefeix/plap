# Factorial - 3 flavors
fact $n = if $n==0 1 $n*(fact $n-1)
# or
fact1 $n = apply times [1..$n]
# or
fact2 $n = accumulate times [1..$n] 1

# Fibonacci
fib $n = if $n<=1 1 (fib $n-2)+(fib $n-1)

# Combinators
S $x = \$y -> \$z -> ($x $z) ($y $z)
K $x = \$y -> $x
I $x = $x
# Note that you can't do much with these, because every expression must have a
#  definite type (maybe)

# The following is loosely based on http://merd.sourceforge.net/cookbook.html,
# which is in turn based on examples from the Perl Cookbook

##
# Accessing Substrings
##

nth $l $n = if $n==0 (hd $l) (nth (tl $l) $n-1)

sub_helper $list $indices $offset = #fixme
  split $list \$y $ys -> split $indices \$x $xs -> 
    if $x==$offset $y:(sub_helper $ys $xs $offset+1) 
                   sub_helper $ys $indices $offset+1
  
sub $list $indices = 
    sub_helper $list $indices 0
subs $list $from $len = sub $list [$from..$from+$len-1]

last $l = if (tl $l)==[] (hd $l) (last (tl $l))

length $l = if $l==[] 0 1+(length (tl $l))

lasts $l $n = if (length $l)<=$n $l (lasts (tl $l) $n)

##
# Converting Between ASCII Characters and Values
##

upchars $l = map $l \$x -> index2symbol (symbol2index $x)+1

##
# Processing a String One Character at a Time
##

empty $l = $l==[]

uniq $l =
  let 
    [uniq_h $x $l2 = if (empty $l2) [$x] (if $x==(hd $l2) [] [$x])~(uniq_h (hd $l2) (tl $l2))]
    if (empty $l) $l (uniq_h (hd $l) (tl $l))
    
filter $l $pred = 
  if (empty $l) $l
    (if ($pred (hd $l)) [hd $l] [])~(filter (tl $l) $pred)

sort $l = split $l \$x $xs -> 
  ((sort (filter $xs (\$y -> less $y $x))))~[$x]~(sort (filter $xs (\$y -> less $x $y)))

##
# Reversing a String by Word or Character
##

reverse $l = if (empty $l) $l (reverse (tl $l))~[hd $l]

words_helper $words $word $l = 
    if (empty $l) 
      if (empty $word) $words $word:$words
      if (hd $l)==' '
        words_helper $word:$words [] (tl $l)
        words_helper $words $word~[hd $l] (tl $l)

join $joiner $words = split $words \$x $xs -> 
  $x~(if $xs==[] [] $joiner~(join $joiner $xs))

words $l = reverse (words_helper [] [] $l)

long_palindromes $words = 
  filter $words \$s -> $s==(reverse $s) && (length $s)>4
